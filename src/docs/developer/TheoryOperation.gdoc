The resources plugin provides 4 primary elements to allow remapping and processing of resources.

# A set of servlet filters which provide responses to requests in the mapped URI subspace (MUS) of the application, normally <ctx>/static. 

# A set of mappers, invoked by the servlet filter, to modify and process resources.

# A domain specific language (DSL) for defining modules of resources which can be loaded by a page. 

# A tag library which provides appropriate links to processed resources.

h1. Types of Resources

From the perspective of the resources plugin, the resources accessed by the application can be divided into 3 classes:

# Declared resources are those which are accessed by URLs in the mapped URI subspace and belong to a declared module. Links to these are normally generated by resources plugin tags or by tags from other resources plugin aware tag libraries.

# Undeclared resources are those which are accessed by URLs in the mapped URI subspace but which do not belong to any module. Links to these are normally hard-coded and not generated by resources plugin tags or generated by other tag libraries which are not resources plugin aware.

# Ad-hoc, or legacy, resources are those accessed by URLs outside the mapped URI subspace.

h1. ResourceMeta entries.

Information about mapped resources is stored internally in [ResourceMeta|api:org.grails.plugin.resource] objects. Subclasses of this type represent different types of resources which can be accessed in the MUS, such as bundles of CSS files ([CSSBundleResourceMeta|api:org.grails.plugin.resource]).
The ResourceMeta objects are stored in an a mapping from the URI to the ResourceMeta, an  instance of [ResourceMetaStore|api:org.grails.plugin.resource.util] which belongs to the [ResourceProcessor|api:org.grails.plugin.resource].

h1. Servlet filters.

The resources plugin operates on incoming requests by inserting up to three filters into the Spring servlet filter chain, as described in the doWithWebDescriptor closure of the ResourcesGrailsPlugin.groovy descriptor.

The first filter is an instance of [ProcessingFilter|api:org.grails.plugin.resource] with the adhoc parameter being false. It is mapped to intercept all requests in the MUS, as set by the grails.resources.uri.prefix configuration variable, whose default value is 'static'. 

The second filter is also an instance of [ProcessingFilter|api:org.grails.plugin.resource], but with the adhoc parameter being true. It is only inserted if the grails.resource.adhoc.patterns variable is not empty. It is mapped to intercept all requests which may the adhoc patterns. These patterns are defined using the limited patterns that are available in web.xml filter-mapping descriptions.

The third filter is an instance of [DevModeSanityFilter|api:org.grails.plugin.resource]. It is only inserted if the environment is development.

All of these filters are inserted in the servlet filter chain defined in web.xml after the springSecurityFilterChain (if in use) and the sitemesh filters. They are inserted prior to the charEncodingFilter and urlMapping filters. 

h1. ResourceProcessor.

This is the main class which processes resources for both the [ProcessingFilter|api:org.grails.plugin.resource] and [ResourceTagLib|api:org.grails.plugin.resource]. It is a Spring bean which is instantiated in the ApplicationContext in the doWithSpring closure of the ResourcesGrailsPlugin.groovy descriptor. 